{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploymentPurpose": {
            "type": "string",
            "defaultValue": "webAppExample",
            "metadata": {
                "description": "Short hand term used to create Azure resources."
            }
        },
        "failedRunbookAlertEmail": {
            "defaultValue": "first.last@mail.com",
            "type": "string",
            "metadata": {
                "description": "This is the email that will receive the failure notification."
            }
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Schedule will start one hour from this time."
            }
        }
    },
    "variables": {
        "webAppDnsName": ".azurewebsites.net",
        "networkLocation": "[resourceGroup().location]",
        "skuTier": "WAF_v2",
        "webAppUniqueName": "[format('{0}-{1}', parameters('deploymentPurpose'), uniqueString(resourceGroup().id))]",
        "frontDoorName": "[concat('frontDr', parameters('deploymentPurpose'), uniqueString(resourceGroup().id))]",
        "frontDoorBackEndPoolName": "internalWebApp",
        "frontDoorLoadBalanaceSettingsName": "loadBalancingSettings",
        "frontDoorHealthProbeSettingsName": "healthProbeSettings",
        "frontDoorRouteRulesName": "routeRules",
        "azureWafPoliciesName": "[concat('WafFrontDr', uniqueString(resourceGroup().id))]",
        "logAnalyticsWorkspaceName": "[concat('Law-', variables('webAppUniqueName'))]",
        "webAppServiceName": "[concat('AppService-', variables('webAppUniqueName'))]",
        "webAppInternalName": "[concat(variables('webAppUniqueName'),'-Internal')]",
        "webAppSkuName": "P1v2",
        "automationAccountName": "[concat('AA-', 'CLAW-Aggregator')]",
        "UploadAzADLogs": "UploadAzADLogs",
        "UploadAzAppGatewayLogs": "UploadAzAppGatewayLogs",
        "UploadAzFirewallLogs": "UploadAzFirewallLogs",
        "UploadAzFrontDoorLogs": "UploadAzFrontDoorLogs",
        "UploadThirdPartyFirewallLogs": "UploadThirdPartyFirewallLogs",
        "UploadNetFlowLogs": "UploadNetFlowLogs",
        "scheduleCount": 4,
        "jobName00": "00",
        "jobName01": "01",
        "jobName02": "02",
        "jobName03": "03",
        "startTime": "[dateTimeAdd(parameters('baseTime'), 'PT1H')]",
        "runbookName": "[concat('Runbook-', 'CLAW-Aggregator')]",
        "runbookUri": "https://raw.githubusercontent.com/Azure/trusted-internet-connection/main/Runbook/CLAW-Aggregator.ps1",
        "diagSettingsName": "[concat('SendtoWorkspace-', variables('webAppUniqueName'))]",
        "actionGroupName": "FailureEmail",
        "tenantIdObject": {
            "value": "[subscription().tenantId]",
            "type": "object"
        },
        "tenantId": "[variables('tenantIdObject').value]",
        "logAnalyticsReaderRoleId": "73c42c96-874c-492b-b04d-ab87d138a893"
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2021-04-01-preview",
            "name": "[guid(variables('automationAccountName'))]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('logAnalyticsReaderRoleId'))]",
                "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName')), '2021-06-22', 'Full').identity.principalId]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]",
                "[resourceId('Microsoft.Network/frontdoors', variables('frontDoorName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/frontdoors",
            "apiVersion": "2020-05-01",
            "name": "[variables('frontDoorName')]",
            "location": "Global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', variables('azureWafPoliciesName'))]",
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]"
            ],
            "properties": {
                "resourceState": "Enabled",
                "enabledState": "Enabled",
                "friendlyName": "[variables('frontDoorName')]",
                "frontendEndpoints": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), concat('/FrontendEndpoints/', variables('frontDoorName'), '-azurefd-net'))]",
                        "name": "[concat(variables('frontDoorName'), '-azurefd-net')]",
                        "properties": {
                            "resourceState": "Enabled",
                            "hostName": "[concat(variables('frontDoorName'), '.azurefd.net')]",
                            "sessionAffinityEnabledState": "Disabled",
                            "sessionAffinityTtlSeconds": 0,
                            "webApplicationFirewallPolicyLink": {
                                "id": "[resourceId('Microsoft.Network/frontdoorwebapplicationfirewallpolicies', variables('azureWafPoliciesName'))]"
                            }
                        }
                    }
                ],
                 "backendPools": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/BackendPools/', variables('frontDoorBackEndPoolName'))]",
                        "name": "[variables('frontDoorBackEndPoolName')]",
                        "properties": {
                            "resourceState": "Enabled",
                            "backends": [
                                {
                                    "address": "[concat(variables('webAppInternalName'), '.azurewebsites.net')]",
                                    "httpPort": 80,
                                    "httpsPort": 443,
                                    "priority": 1,
                                    "weight": 50,
                                    "backendHostHeader": "[concat(variables('webAppInternalName'), '.azurewebsites.net')]",
                                    "enabledState": "Enabled"
                                }
                            ],
                            "loadBalancingSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/loadBalancingSettings/', variables('frontDoorLoadBalanaceSettingsName'))]"
                            },
                            "healthProbeSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/healthProbeSettings/', variables('frontDoorHealthProbeSettingsName'))]"
                            }
                        }
                    }
                ],
                "backendPoolsSettings": {
                    "enforceCertificateNameCheck": "Enabled",
                    "sendRecvTimeoutSeconds": 30
                },
                "loadBalancingSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/loadBalancingSettings/', variables('frontDoorLoadBalanaceSettingsName'))]",
                        "name": "[variables('frontDoorLoadBalanaceSettingsName')]",
                        "properties": {
                            "resourceState": "Enabled",
                            "sampleSize": 4,
                            "successfulSamplesRequired": 2,
                            "additionalLatencyMilliseconds": 0
                        }
                    }
                ],
                "healthProbeSettings": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/healthProbeSettings/', variables('frontDoorHealthProbeSettingsName'))]",
                        "name": "[variables('frontDoorHealthProbeSettingsName')]",
                        "properties": {
                            "resourceState": "Enabled",
                            "path": "/",
                            "protocol": "Https",
                            "intervalInSeconds": 30,
                            "enabledState": "Enabled",
                            "healthProbeMethod": "Get"
                        }
                    }
                ],
                "routingRules": [
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/RoutingRules/httpToHttpsRedirect')]",
                        "name": "httpToHttpsRedirect",
                        "properties": {
                            "routeConfiguration": {
                                "redirectType": "Found",
                                "redirectProtocol": "HttpsOnly",
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorRedirectConfiguration"
                            },
                            "resourceState": "Enabled",
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), concat('/FrontendEndpoints/', variables('frontDoorName'), '-azurefd-net'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Http"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled"
                        }
                    },
                    {
                        "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/RoutingRules/', variables('frontDoorRouteRulesName'))]",
                        "name": "[variables('frontDoorRouteRulesName')]",
                        "properties": {
                            "routeConfiguration": {
                                "forwardingProtocol": "HttpsOnly",
                                "backendPool": {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), '/BackendPools/', variables('frontDoorBackEndPoolName'))]"
                                },
                                "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration"
                            },
                            "resourceState": "Enabled",
                            "frontendEndpoints": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName')), concat('/FrontendEndpoints/', variables('frontDoorName'), '-azurefd-net'))]"
                                }
                            ],
                            "acceptedProtocols": [
                                "Https"
                            ],
                            "patternsToMatch": [
                                "/*"
                            ],
                            "enabledState": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/frontdoorwebapplicationfirewallpolicies",
            "apiVersion": "2020-11-01",
            "name": "[variables('azureWafPoliciesName')]",
            "location": "Global",
            "sku": {
                "name": "Classic_AzureFrontDoor"
            },
            "properties": {
                "policySettings": {
                    "enabledState": "Enabled",
                    "mode": "Prevention",
                    "customBlockResponseStatusCode": 403,
                    "requestBodyCheck": "Enabled"
                },
                "managedRules": {
                    "managedRuleSets": [
                        {
                            "ruleSetType": "Microsoft_DefaultRuleSet",
                            "ruleSetVersion": "1.1",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        },
                        {
                            "ruleSetType": "Microsoft_BotManagerRuleSet",
                            "ruleSetVersion": "1.0",
                            "ruleGroupOverrides": [],
                            "exclusions": []
                        }
                    ]
                }
            }
        },
        {
            "type": "microsoft.operationalinsights/workspaces",
            "apiVersion": "2021-06-01",
            "name": "[variables('logAnalyticsWorkspaceName')]",
            "location": "[variables('networkLocation')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppServiceName')]",
            "location": "[variables('networkLocation')]",
            "sku": {
                "name": "[variables('webAppSkuName')]",
                "tier": "[variables('skuTier')]",
                "size": "[variables('webAppSkuName')]",
                "family": "[variables('webAppSkuName')]",
                "capacity": 1
            },
            "kind": "app",
            "properties": {}
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[variables('webAppInternalName')]",
            "location": "[variables('networkLocation')]",
            "kind": "app",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('webAppServiceName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('webAppServiceName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('webAppServiceName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('webAppServiceName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2021-02-01",
            "name": "[concat(variables('webAppInternalName'), '/web')]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "AzureFrontDoor.Backend",
                        "action": "Allow",
                        "tag": "ServiceTag",
                        "priority": 100,
                        "name": "RestrictAccessToFrontDoor",
                        "headers": {
                            "x-azure-fdid": [
                                "[reference(resourceId('Microsoft.Network/frontdoors', variables('frontDoorName'))).frontdoorId]"
                            ]
                        }
                    },
                    {
                        "ipAddress": "Any",
                        "action": "Deny",
                        "priority": 2147483647,
                        "name": "Deny all",
                        "description": "Deny all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 1,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2019-08-01",
            "name": "[format('{0}/{1}', variables('webAppInternalName'), format('{0}{1}', variables('webAppInternalName'), variables('webAppDnsName')))]",
            "properties": {
                "siteName": "[variables('webAppInternalName')]",
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webAppInternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2021-06-22",
            "name": "[variables('automationAccountName')]",
            "location": "[variables('networkLocation')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "disableLocalAuth": false,
                "sku": {
                    "name": "Basic"
                },
                "encryption": {
                    "keySource": "Microsoft.Automation",
                    "identity": {}
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/AWSPowerShell')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "contentLink": {
                    "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/awspowershell.4.1.16.nupkg"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('automationAccountName'), '/' , variables('runbookName'))]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0,
                "publishContentLink": {
                    "uri": "[variables('runbookUri')]"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('UploadAzADLogs'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "description": "Upload Azure Active Directory Logs from the last 15 minutes to CISA CLAW.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 15) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('UploadAzFirewallLogs'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzADLogs'), '-3'))]"
            ],
            "properties": {
                "description": "Upload Azure Firewall Logs from the last 15 minutes to CISA CLAW.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 15) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('UploadAzFrontDoorLogs'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFirewallLogs'), '-3'))]"
            ],
            "properties": {
                "description": "Upload Azure Front Door Logs from the last 15 minutes to CISA CLAW.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 15) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('UploadAzAppGatewayLogs'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFrontDoorLogs'), '-3'))]"
            ],
            "properties": {
                "description": "Upload Azure App Gateway Logs from the last 15 minutes to CISA CLAW.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 15) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('UploadNetFlowLogs'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzAppGatewayLogs'), '-3'))]"
            ],
            "properties": {
                "description": "Upload Azure NetFlow Logs from the last 15 minutes to CISA CLAW.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 15) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('UploadThirdPartyFirewallLogs'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadNetFlowLogs'), '-3'))]"
            ],
            "properties": {
                "description": "Upload Azure Third-party Firewall Logs from the last 15 minutes to CISA CLAW.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 15) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzADLogs'), variables('jobName00')))]",
            "properties": {
                "parameters": {
                    "logAzureADAuth": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzADLogs'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzADLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzADLogs'), variables('jobName01')))]",
            "properties": {
                "parameters": {
                    "logAzureADAuth": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzADLogs'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzADLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzADLogs'), variables('jobName02')))]",
            "properties": {
                "parameters": {
                    "logAzureADAuth": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzADLogs'), '-2')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzADLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzADLogs'), variables('jobName03')))]",
            "properties": {
                "parameters": {
                    "logAzureADAuth": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzADLogs'), '-3')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzADLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFirewallLogs'), variables('jobName00')))]",
            "properties": {
                "parameters": {
                    "logAzureFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFirewallLogs'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFirewallLogs'), variables('jobName01')))]",
            "properties": {
                "parameters": {
                    "logAzureFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFirewallLogs'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFirewallLogs'), variables('jobName02')))]",
            "properties": {
                "parameters": {
                    "logAzureFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFirewallLogs'), '-2')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFirewallLogs'), variables('jobName03')))]",
            "properties": {
                "parameters": {
                    "logAzureFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFirewallLogs'), '-3')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFrontDoorLogs'), variables('jobName00')))]",
            "properties": {
                "parameters": {
                    "logAzureFrontDoor": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFrontDoorLogs'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFrontDoorLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFrontDoorLogs'), variables('jobName01')))]",
            "properties": {
                "parameters": {
                    "logAzureFrontDoor": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFrontDoorLogs'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFrontDoorLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFrontDoorLogs'), variables('jobName02')))]",
            "properties": {
                "parameters": {
                    "logAzureFrontDoor": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFrontDoorLogs'), '-2')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFrontDoorLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzFrontDoorLogs'), variables('jobName03')))]",
            "properties": {
                "parameters": {
                    "logAzureFrontDoor": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzFrontDoorLogs'), '-3')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzFrontDoorLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadNetFlowLogs'), variables('jobName00')))]",
            "properties": {
                "parameters": {
                    "logNetflow": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadNetFlowLogs'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadNetFlowLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadNetFlowLogs'), variables('jobName01')))]",
            "properties": {
                "parameters": {
                    "logNetflow": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadNetFlowLogs'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadNetFlowLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadNetFlowLogs'), variables('jobName02')))]",
            "properties": {
                "parameters": {
                    "logNetflow": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadNetFlowLogs'), '-2')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadNetFlowLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadNetFlowLogs'), variables('jobName03')))]",
            "properties": {
                "parameters": {
                    "logNetflow": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadNetFlowLogs'), '-3')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadNetFlowLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzAppGatewayLogs'), variables('jobName00')))]",
            "properties": {
                "parameters": {
                    "logAzureAppGateway": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzAppGatewayLogs'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzAppGatewayLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzAppGatewayLogs'), variables('jobName01')))]",
            "properties": {
                "parameters": {
                    "logAzureAppGateway": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzAppGatewayLogs'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzAppGatewayLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzAppGatewayLogs'), variables('jobName02')))]",
            "properties": {
                "parameters": {
                    "logAzureAppGateway": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzAppGatewayLogs'), '-2')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzAppGatewayLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadAzAppGatewayLogs'), variables('jobName03')))]",
            "properties": {
                "parameters": {
                    "logAzureAppGateway": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadAzAppGatewayLogs'), '-3')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadAzAppGatewayLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadThirdPartyFirewallLogs'), variables('jobName00')))]",
            "properties": {
                "parameters": {
                    "logThirdpartyFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadThirdPartyFirewallLogs'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadThirdPartyFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadThirdPartyFirewallLogs'), variables('jobName01')))]",
            "properties": {
                "parameters": {
                    "logThirdpartyFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadThirdPartyFirewallLogs'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadThirdPartyFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadThirdPartyFirewallLogs'), variables('jobName02')))]",
            "properties": {
                "parameters": {
                    "logThirdpartyFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadThirdPartyFirewallLogs'), '-2')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadThirdPartyFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('UploadThirdPartyFirewallLogs'), variables('jobName03')))]",
            "properties": {
                "parameters": {
                    "logThirdpartyFirewall": "true"
                },
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('UploadThirdPartyFirewallLogs'), '-3')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('UploadThirdPartyFirewallLogs'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/TenantId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "description": "This is the Tenant ID from Azure AD. Initially populated from Deployment ARM Template.",
                "value": "[concat('\"',variables('tenantId'),'\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/LogAnalyticWorkspaceID')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "description": "Log Analytics Workspace where the Azure Firewall sends its diagnostic logs. Initially populated from Deployment ARM Template.",
                "value": "[concat('\"',reference(resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))).customerId,'\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/AccessKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/SecretKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA, this will expire. Please discuss with CISA to understand when it rotates. Please UPDATE this variable before it expires."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/BucketName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA."
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2021-09-01",
            "name": "[variables('actionGroupName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[variables('actionGroupName')]",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "Email_-EmailAction-",
                        "emailAddress": "[parameters('failedRunbookAlertEmail')]",
                        "useCommonAlertSchema": true
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventhubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Failed Runbook Job",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('microsoft.insights/actionGroups', variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 0,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.Automation/automationAccounts",
                            "metricName": "TotalJob",
                            "dimensions": [
                                {
                                    "name": "Status",
                                    "operator": "Include",
                                    "values": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": false,
                "targetResourceType": "Microsoft.Automation/automationAccounts",
                "targetResourceRegion": "[variables('networkLocation')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/frontdoors/providers/diagnosticSettings",
            "name": "[concat(variables('frontDoorName'),'/microsoft.insights/', variables('diagSettingsName'))]",
            "apiVersion": "2021-05-01-preview",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "[resourceId('Microsoft.Network/frontdoors', variables('frontDoorName'))]"
            ],
            "properties": {
                "name": "DiagService",
                "storageAccountId": null,
                "eventHubAuthorizationRuleId": null,
                "eventHubName": null,
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]",
                "logs": [
                    {
                        "category": "FrontdoorAccessLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    },
                    {
                        "category": "FrontdoorWebApplicationFirewallLog",
                        "enabled": true,
                        "retentionPolicy": {
                            "days": 10,
                            "enabled": false
                        }
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": false,
                            "days": 0
                        }
                    }
                ]
            }
        }
    ]
}