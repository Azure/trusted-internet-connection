{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "azureFirewallName": {
            "defaultValue": "TheNameofYourAzureFirewall",
            "type": "String",
            "metadata": {
                "description": "This is the Azure Firewall that you are using to manage inbound access for your applications."
            }
        },
        "azureFirewallResourceGroupName": {
            "defaultValue": "ResourceGroupNameOfAzureFirewall",
            "type": "String",
            "metadata": {
                "description": "This is the Resource Group Name where your Azure Firewall is located."
            }
        },
        "logAnalyticsWorkspaceName": {
            "defaultValue": "TheNameofYourLogAnalyticsWorkspace",
            "type": "String",
            "metadata": {
                "description": "This is the Log Analytics Workspace that you are using to collect kigs. This is where the Firewall logs will be sent."
            }
        },
        "logAnalyticsResourceGroupName": {
            "defaultValue": "ResourceGroupNameofLogAnalytics",
            "type": "String",
            "metadata": {
                "description": "This is the Resource Group Name where your Log Analytics Workspace located."
            }
        },
        "automationAccountName": {
            "defaultValue": "AA-UploadLogsToCLAW",
            "type": "String",
            "metadata": {
                "description": "This is the Automation account name. This will be used to execute a runbook that will collect logs and send them to the CLAW."
            }
        },
        "automationAccountLocation": {
            "defaultValue": "eastus",
            "type": "String",
            "metadata": {
                "description": "This is the region where your Automation account will deploy."
            }
        },
        "scheduleName": {
            "defaultValue": "HourlyUploadsToCLAW",
            "type": "String",
            "metadata": {
                "description": "This is automation account schedule name. This will be used to initiate the runbook ever hour on the hour."
            }
        },
        "baseTime": { 
            "type": "string", 
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Schedule will start one hour from this time."
            }
        },
        "runbookName": {
            "defaultValue": "UploadsToCLAWS3",
            "type": "String",
            "metadata": {
                "description": "This is the automation account runbook name. The runbook is pulled from github and published as this name."
            }
        },
        "runbookUri": {
            "defaultValue": "https://raw.githubusercontent.com/Azure/trusted-internet-connection/main/Runbook/UploadToCLAW-S3.ps1",
            "type": "String",
            "metadata": {
                "description": "DO NOT CHANGE, unless you know what you are doing. This is the github location of the runbook."
            }
        },
        "diagSettingsName": {
            "defaultValue": "SendToWorkspace",
            "type": "String",
            "metadata": {
                "description": "This is the diagnostic settings in the Firewall that will send logs to the Log Analytics Workspace."
            }
        },
        "actionGroupName": {
            "defaultValue": "FailureEmail",
            "type": "string",
            "maxLength": 12,
            "metadata": {
                "description": "This is the action group in Azure Alert that will email you if the runbook fails to send logs to the CLAW."
            }
        },
        "failedRunbookAlertEmail": {
            "defaultValue": "first.last@mail.com",
            "type": "string",
            "metadata": {
                "description": "This is the email(s) that will receive the failure notification. Seperate with comma."
            }
        }
    },
    "variables": {
        "startTime": "[dateTimeAdd(parameters('baseTime'), 'PT1H')]"
     },
    "resources": [
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2021-06-22",
            "name": "[parameters('automationAccountName')]",
            "location": "[parameters('automationAccountLocation')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "disableLocalAuth": false,
                "sku": {
                    "name": "Basic"
                },
                "encryption": {
                    "keySource": "Microsoft.Automation",
                    "identity": {}
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/AWSPowerShell')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "contentLink": {
                    "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/awspowershell.4.1.16.nupkg"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2019-06-01",
            "name": "[concat(parameters('automationAccountName'), '/' , parameters('runbookName'))]",
            "location": "[parameters('automationAccountLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0,
                "publishContentLink": {
                    "uri": "[parameters('runbookUri')]"
                    }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', parameters('scheduleName'), '-01')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "Every hour initiate the UploadToCLAW-S3 runbook.",
                "startTime": "[variables('startTime')]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', parameters('scheduleName'), '-02')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "Every hour initiate the UploadToCLAW-S3 runbook.",
                "startTime": "[variables('startTime')]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', parameters('scheduleName'), '-03')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "Every hour initiate the UploadToCLAW-S3 runbook.",
                "startTime": "[variables('startTime')]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', parameters('scheduleName'), '-04')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "Every hour initiate the UploadToCLAW-S3 runbook.",
                "startTime": "[variables('startTime')]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/', parameters('scheduleName'), '-05')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "description": "Every hour initiate the UploadToCLAW-S3 runbook.",
                "startTime": "[variables('startTime')]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/AWSAccessKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/AWSSecretKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA, this will expire. Please discuss with CISA to understand when it rotates. Please UPDATE this variable before it expires."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/EnterpriseApplicationId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Register a new Enterprise Application and collect the Enterprise Application ID for this variable"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/EnterpriseApplicationSecret')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Create this variable from the cert & secrets pane for the Enterprise Application. This is typically valid for 6 months but could be valid up to 24 months."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/LogAnalyticWorkspaceID')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Log Analytics Workspace where the Azure Firewall sends its diagnostic logs."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/S3BucketName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(parameters('automationAccountName'), '/TenantId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "This is the Tenant ID from Azure AD"
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2021-09-01",
            "name": "[parameters('actionGroupName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[parameters('actionGroupName')]",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "Email_-EmailAction-",
                        "emailAddress": "[parameters('failedRunbookAlertEmail')[copyIndex()]]",
                        "useCommonAlertSchema": true
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventhubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Failed Runbook Job",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]",
                "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]"
            ],
            "properties": {
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Automation/automationAccounts', parameters('automationAccountName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 0,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.Automation/automationAccounts",
                            "metricName": "TotalJob",
                            "dimensions": [
                                {
                                    "name": "Status",
                                    "operator": "Include",
                                    "values": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": false,
                "targetResourceType": "Microsoft.Automation/automationAccounts",
                "targetResourceRegion": "[parameters('automationAccountLocation')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', parameters('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "NestedTemplate-AzureFirewallDiagnsoticSettings",
            "resourceGroup": "[parameters('azureFirewallResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type":"Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                            "name":"[concat(parameters('azureFirewallName'),'/microsoft.insights/', parameters('diagSettingsName'))]",
                            "apiVersion":"2017-05-01-preview",
                            "dependsOn": [],
                            "properties":{
                                "name":"DiagService",
                                "storageAccountId":null,
                                "eventHubAuthorizationRuleId":null,
                                "eventHubName":null,
                                "workspaceId":"[resourceId(parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                                "logs":[
                                {
                                    "category":"AzureFirewallApplicationRule",
                                    "enabled":true,
                                    "retentionPolicy":{
                                        "days":10,
                                        "enabled":false
                                    }
                                },
                                {
                                    "category":"AzureFirewallNetworkRule",
                                    "enabled":true,
                                    "retentionPolicy":{
                                        "days":10,
                                        "enabled":false
                                    }
                                }
                                ],
                                "metrics":[
                                {
                                    "category":"AllMetrics",
                                    "enabled":true,
                                    "retentionPolicy":{
                                        "enabled":false,
                                        "days":0
                                    }
                                }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    ]
}