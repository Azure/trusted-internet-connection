{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "templateVersion": {
            "defaultValue": "20220209.1414",
            "type": "String",
            "allowedValues": [
                "20220209.1414"
            ],
            "metadata": {
                "description": "This is the version of the template you are running."
            }
        },
        "azureResourcePrependName": {
            "type": "string",
            "defaultValue": "tic30",
            "metadata": {
                "description": "Name will be used to create Azure Resources"
            }
        },
        "azureFirewallName": {
            "defaultValue": "TheNameofYourAzureFirewall",
            "type": "String",
            "metadata": {
                "description": "This is the Azure Firewall that you are using to manage inbound access for your applications."
            }
        },
        "azureFirewallResourceGroupName": {
            "defaultValue": "ResourceGroupNameOfAzureFirewall",
            "type": "String",
            "metadata": {
                "description": "This is the Resource Group Name where your Azure Firewall is located."
            }
        },
        "logAnalyticsWorkspaceName": {
            "defaultValue": "TheNameofYourLogAnalyticsWorkspace",
            "type": "String",
            "metadata": {
                "description": "This is the Log Analytics Workspace that you are using to collect kigs. This is where the Firewall logs will be sent."
            }
        },
        "logAnalyticsResourceGroupName": {
            "defaultValue": "ResourceGroupNameofLogAnalytics",
            "type": "String",
            "metadata": {
                "description": "This is the Resource Group Name where your Log Analytics Workspace located."
            }
        },
        "failedRunbookAlertEmail": {
            "defaultValue": "first.last@mail.com",
            "type": "string",
            "metadata": {
                "description": "This is the email that will receive the failure notification."
            }
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Schedule will start one hour from this time."
            }
        }
    },
    "variables": {
        "networkLocation": "[resourceGroup().location]",
        "webAppUniqueName": "[format('{0}-{1}', parameters('azureResourcePrependName'), uniqueString(resourceGroup().id))]",
        "automationAccountName": "[concat('AutoAcct-', variables('webAppUniqueName'), '-ToCLAW')]",
        "scheduleName": "UploadAzureFirewallLogs",
        "scheduleCount": 5,
        "startTime": "[dateTimeAdd(parameters('baseTime'), 'PT1H')]",
        "runbookName": "[concat('Runbook-', variables('webAppUniqueName'), '-ToCLAW')]",
        "runbookUri": "https://raw.githubusercontent.com/Azure/trusted-internet-connection/main/Runbook/UploadToCLAW-S3.ps1",
        "diagSettingsName": "[concat('SendtoWorkspace-', variables('webAppUniqueName'))]",
        "actionGroupName": "FailureEmail",
        "tenantIdObject": {
            "value": "[subscription().tenantId]",
            "type": "object"
        },
        "tenantId": "[variables('tenantIdObject').value]",
        "logAnalyticsReaderRoleId": "73c42c96-874c-492b-b04d-ab87d138a893"
    },
    "resources": [
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2021-04-01-preview",
            "name": "[guid(variables('automationAccountName'))]",
            "properties": {
                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', variables('logAnalyticsReaderRoleId'))]",
                "principalId": "[reference(resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName')), '2021-06-22', 'Full').identity.principalId]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts",
            "apiVersion": "2021-06-22",
            "name": "[variables('automationAccountName')]",
            "location": "[variables('networkLocation')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "disableLocalAuth": false,
                "sku": {
                    "name": "Basic"
                },
                "encryption": {
                    "keySource": "Microsoft.Automation",
                    "identity": {}
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/modules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/AWSPowerShell')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "contentLink": {
                    "uri": "https://devopsgallerystorage.blob.core.windows.net:443/packages/awspowershell.4.1.16.nupkg"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/runbooks",
            "apiVersion": "2019-06-01",
            "name": "[concat(variables('automationAccountName'), '/' , variables('runbookName'))]",
            "location": "[variables('networkLocation')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "runbookType": "PowerShell",
                "logVerbose": false,
                "logProgress": false,
                "logActivityTrace": 0,
                "publishContentLink": {
                    "uri": "[variables('runbookUri')]"
                }
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/schedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', variables('scheduleName'), '-', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "description": "Every hour initiate the UploadToCLAW-S3 runbook.",
                "startTime": "[dateTimeAdd(variables('startTime'), concat('PT', mul(copyIndex(), 30) ,'M'))]",
                "interval": 1,
                "frequency": "Hour",
                "timeZone": "America/New_York"
            },
            "copy": {
                "name": "scheduleCount",
                "count": "[variables('scheduleCount')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName')))]",
            "properties": {
                "parameters": {},
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('scheduleName'), '-0')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('scheduleName'), '-0'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/jobSchedules",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/', guid(variables('automationAccountName'), variables('scheduleName')))]",
            "properties": {
                "parameters": {},
                "runbook": {
                    "name": "[variables('runbookName')]"
                },
                "schedule": {
                    "name": "[concat(variables('scheduleName'), '-1')]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.Automation/automationAccounts/runbooks', variables('automationAccountName'), variables('runbookName'))]",
                "[concat('Microsoft.Automation/automationAccounts/', variables('automationAccountName'), '/schedules/', concat(variables('scheduleName'), '-1'))]"
            ]
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/TenantId')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "description": "This is the Tenant ID from Azure AD. Initially populated from Deployment ARM Template.",
                "value": "[concat('\"',variables('tenantId'),'\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/LogAnalyticWorkspaceID')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
            ],
            "properties": {
                "description": "Log Analytics Workspace where the Azure Firewall sends its diagnostic logs. Initially populated from Deployment ARM Template.",
                "value": "[concat('\"',reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))).customerId,'\"')]"
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/AWSAccessKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/AWSSecretKey')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA, this will expire. Please discuss with CISA to understand when it rotates. Please UPDATE this variable before it expires."
            }
        },
        {
            "type": "Microsoft.Automation/automationAccounts/variables",
            "apiVersion": "2020-01-13-preview",
            "name": "[concat(variables('automationAccountName'), '/S3BucketName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
            ],
            "properties": {
                "isEncrypted": true,
                "description": "Provided by CISA."
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2021-09-01",
            "name": "[variables('actionGroupName')]",
            "location": "Global",
            "properties": {
                "groupShortName": "[variables('actionGroupName')]",
                "enabled": true,
                "emailReceivers": [
                    {
                        "name": "Email_-EmailAction-",
                        "emailAddress": "[parameters('failedRunbookAlertEmail')]",
                        "useCommonAlertSchema": true
                    }
                ],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventhubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": []
            }
        },
        {
            "type": "microsoft.insights/metricAlerts",
            "apiVersion": "2018-03-01",
            "name": "Failed Runbook Job",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]",
                "[resourceId('microsoft.insights/actionGroups', variables('actionGroupName'))]"
            ],
            "properties": {
                "severity": 0,
                "enabled": true,
                "scopes": [
                    "[resourceId('Microsoft.Automation/automationAccounts', variables('automationAccountName'))]"
                ],
                "evaluationFrequency": "PT1M",
                "windowSize": "PT5M",
                "criteria": {
                    "allOf": [
                        {
                            "threshold": 0,
                            "name": "Metric1",
                            "metricNamespace": "Microsoft.Automation/automationAccounts",
                            "metricName": "TotalJob",
                            "dimensions": [
                                {
                                    "name": "Status",
                                    "operator": "Include",
                                    "values": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "operator": "GreaterThan",
                            "timeAggregation": "Count",
                            "criterionType": "StaticThresholdCriterion"
                        }
                    ],
                    "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria"
                },
                "autoMitigate": false,
                "targetResourceType": "Microsoft.Automation/automationAccounts",
                "targetResourceRegion": "[variables('networkLocation')]",
                "actions": [
                    {
                        "actionGroupId": "[resourceId('microsoft.insights/actionGroups', variables('actionGroupName'))]",
                        "webHookProperties": {}
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "NestedTemplate-AzureFirewallDiagnsoticSettings",
            "resourceGroup": "[parameters('azureFirewallResourceGroupName')]",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
                            "name": "[concat(parameters('azureFirewallName'),'/microsoft.insights/', variables('diagSettingsName'))]",
                            "apiVersion": "2021-05-01-preview",
                            "dependsOn": [],
                            "properties": {
                                "name": "DiagService",
                                "storageAccountId": null,
                                "eventHubAuthorizationRuleId": null,
                                "eventHubName": null,
                                "workspaceId": "[resourceId(parameters('logAnalyticsResourceGroupName'), 'Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
                                "logs": [
                                    {
                                        "category": "AzureFirewallApplicationRule",
                                        "enabled": true,
                                        "retentionPolicy": {
                                            "days": 10,
                                            "enabled": false
                                        }
                                    },
                                    {
                                        "category": "AzureFirewallNetworkRule",
                                        "enabled": true,
                                        "retentionPolicy": {
                                            "days": 10,
                                            "enabled": false
                                        }
                                    }
                                ],
                                "metrics": [
                                    {
                                        "category": "AllMetrics",
                                        "enabled": true,
                                        "retentionPolicy": {
                                            "enabled": false,
                                            "days": 0
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    ]
}