{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworksName": {
            "defaultValue": "VNET-East-DMZ",
            "type": "String",
            "metadata": {
                "description": "This VNET will be created during deployment."
            }
        },
        "networkLocation": {
            "defaultValue": "eastus",
            "type": "String",
            "metadata": {
                "description": "This is the region where all network-based resources will deploy."
            }
        },
        "virtualNetworksIPRange": {
            "defaultValue": "192.168.0.0/16",
            "type": "String",
            "metadata": {
                "description": "This is the IP Range for the VNET in which the Azure Firewall will reside."
            }
        },
        "subnetFirewallName": {
            "defaultValue": "AzureFirewallSubnet",
            "type": "String",
            "allowedValues": [
                "AzureFirewallSubnet"
            ],
            "metadata": {
                "description": "This is the subnet for the Azure Firewall. Its name is fixed."
            }
        },
        "subnetFirewallIPRange": {
            "defaultValue": "192.168.0.0/24",
            "type": "String",
            "metadata": {
                "description": "This is the IP Range of the Azure Firewall subnet."
            }
        },
        "subnetExternalName": {
            "defaultValue": "ExternalSubnet",
            "type": "String",
            "metadata": {
                "description": "This is the subnet for the external (DMZ) facing app service."
            }
        },
        "subnetExternalIPRange": {
            "defaultValue": "192.168.1.0/24",
            "type": "String",
            "metadata": {
                "description": "This is the IP Range of the external (DMZ) subnet."
            }
        },
        "subnetInternalName": {
            "defaultValue": "InternalSubnet",
            "type": "String",
            "metadata": {
                "description": "This is the subnet for the internal facing app service."
            }
        },
        "subnetInternalIPRange": {
            "defaultValue": "192.168.10.0/24",
            "type": "String",
            "metadata": {
                "description": "This is the IP Range of the internal subnet."
            }
        },
        "azureFirewallName": {
            "defaultValue": "FW-East-DMZ",
            "type": "String",
            "metadata": {
                "description": "This is the Azure Firewall name."
            }
        },
        "azureFirewallResourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "String",
            "metadata": {
                "description": "This is the Resource Group where you will deploy the Azure Firewall."
            }
        },
        "azureFirewallPoliciesName": {
            "defaultValue": "FWP-East-DMZ",
            "type": "String",
            "metadata": {
                "description": "This is the Azure Firewall Policy name."
            }
        },
        "publicIPAzureFirewallName": {
            "defaultValue": "PIP-FW-East-DMZ",
            "type": "String",
            "metadata": {
                "description": "This is the public IP address name for the Azure Firewall."
            }
        },
        "logAnalyticsWorkspaceName": {
            "defaultValue": "law-dmz",
            "type": "String",
            "metadata": {
                "description": "This is the Log Analytics Workspace name. This is where the Firewall logs will be sent."
            }
        },
        "logAnalyticsWorkspaceLocation": {
            "defaultValue": "eastus",
            "type": "String",
            "metadata": {
                "description": "This is the region where your Log Analytics workspace will deploy."
            }
        },
        "logAnalyticsResourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "String",
            "metadata": {
                "description": "This is the Resource Group Name where you will deploy the Log Analytics Workspace."
            }
        },
        "webAppServiceName": {
            "type": "string",
            "defaultValue": "webApp-AppService",
            "metadata": {
                "description": "Name of the Web App Service farm"
            }
        },
        "webAppExternalName": {
            "type": "string",
            "defaultValue": "[format('webAppExternal-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "External Web App name must be unique DNS name worldwide"
            }
        },
        "webAppInternalName": {
            "type": "string",
            "defaultValue": "[format('webAppInternal-{0}', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Internal Web App name must be unique DNS name worldwide"
            }
        },
        "webAppSkuName": {
            "type": "string",
            "defaultValue": "P1v2",
            "allowedValues": [
                "P1v2",
                "P2v2",
                "P3v2"
            ],
            "metadata": {
                "description": "SKU, must be minimum P1v2"
            }
        },
        "webAppPrivateEndpointName": {
            "type": "string",
            "defaultValue": "webAppInternalPrivateEndpoint",
            "metadata": {
                "description": "Name of your Private Endpoint"
            }
        },
        "privateLinkConnectionName": {
            "type": "string",
            "defaultValue": "webAppInternalPrivateEndpointLink",
            "metadata": {
                "description": "Link name between your Private Endpoint and your Web App"
            }
        },
        "automationAccountName": {
            "defaultValue": "AA-UploadLogsToCLAW",
            "type": "String",
            "metadata": {
                "description": "This is the Automation account name. This will be used to execute a runbook that will collect logs and send them to the CLAW."
            }
        },
        "automationAccountLocation": {
            "defaultValue": "eastus",
            "type": "String",
            "metadata": {
                "description": "This is the region where your Automation account will deploy."
            }
        },
        "scheduleName": {
            "defaultValue": "HourlyUploadsToCLAW",
            "type": "String",
            "metadata": {
                "description": "This is automation account schedule name. This will be used to initiate the runbook ever hour on the hour."
            }
        },
        "baseTime": {
            "type": "string",
            "defaultValue": "[utcNow('u')]",
            "metadata": {
                "description": "Schedule will start one hour from this time."
            }
        },
        "runbookName": {
            "defaultValue": "UploadsToCLAWS3",
            "type": "String",
            "metadata": {
                "description": "This is the automation account runbook name. The runbook is pulled from github and published as this name."
            }
        },
        "runbookUri": {
            "defaultValue": "https://raw.githubusercontent.com/Azure/trusted-internet-connection/main/Runbook/UploadToCLAW-S3.ps1",
            "type": "String",
            "metadata": {
                "description": "DO NOT CHANGE, unless you know what you are doing. This is the github location of the runbook."
            }
        },
        "diagSettingsName": {
            "defaultValue": "SendToWorkspace",
            "type": "String",
            "metadata": {
                "description": "This is the diagnostic settings in the Firewall that will send logs to the Log Analytics Workspace."
            }
        },
        "actionGroupName": {
            "defaultValue": "FailureEmail",
            "type": "string",
            "maxLength": 12,
            "metadata": {
                "description": "This is the action group in Azure Alert that will email you if the runbook fails to send logs to the CLAW."
            }
        },
        "failedRunbookAlertEmail": {
            "defaultValue": "first.last@mail.com",
            "type": "string",
            "metadata": {
                "description": "This is the email(s) that will receive the failure notification. Seperate with comma."
            }
        }
    },
    "variables": {
        "webAppDnsName": ".azurewebsites.net",
        "privateDnsZoneName": "privatelink.azurewebsites.net",
        "skuTier": "PremiumV2"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('virtualNetworksName')]",
            "location": "[parameters('networkLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworksIPRange')]"
                    ]
                },
                "subnets": [],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworksName'), '/', parameters('subnetExternalName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetExternalIPRange')]",
                "serviceEndpoints": [],
                "delegations": [
                  {
                    "name": "delegation",
                    "properties": {
                      "serviceName": "Microsoft.Web/serverfarms"
                    }
                  }
                ],
                "privateEndpointNetworkPolicies": "Enabled",
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('virtualNetworksName'), '/', parameters('subnetInternalName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
            ],
            "properties": {
                "addressPrefix": "[parameters('subnetInternalIPRange')]",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppServiceName')]",
            "location": "[parameters('networkLocation')]",
            "sku": {
                "name": "[parameters('webAppSkuName')]",
                "tier": "[variables('skuTier')]",
                "size": "[parameters('webAppSkuName')]",
                "family": "[parameters('webAppSkuName')]",
                "capacity": 1
            },
            "kind": "app",
            "properties": {}
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppExternalName')]",
            "location": "[parameters('networkLocation')]",
            "kind": "app",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppServiceName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('webAppServiceName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppInternalName')]",
            "location": "[parameters('networkLocation')]",
            "kind": "app",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webAppServiceName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('webAppServiceName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', parameters('webAppExternalName'), 'appsettings')]",
            "properties": {
                "WEBSITE_DNS_SERVER": "168.63.129.16",
                "WEBSITE_VNET_ROUTE_ALL": "1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppExternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', parameters('webAppInternalName'), 'web')]",
            "properties": {
                "ftpsState": "AllAllowed"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppInternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', parameters('webAppExternalName'), 'web')]",
            "properties": {
                "ftpsState": "AllAllowed"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppExternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2019-08-01",
            "name": "[format('{0}/{1}', parameters('webAppInternalName'), format('{0}{1}', parameters('webAppInternalName'), variables('webAppDnsName')))]",
            "properties": {
                "siteName": "[parameters('webAppInternalName')]",
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppInternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2019-08-01",
            "name": "[format('{0}/{1}', parameters('webAppExternalName'), format('{0}{1}', parameters('webAppExternalName'), variables('webAppDnsName')))]",
            "properties": {
                "siteName": "[parameters('webAppExternalName')]",
                "hostNameType": "Verified"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppExternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/sites/networkConfig",
            "apiVersion": "2020-06-01",
            "name": "[format('{0}/{1}', parameters('webAppExternalName'), 'virtualNetwork')]",
            "properties": {
                "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworksName'), parameters('subnetExternalName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworksName'), parameters('subnetExternalName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('webAppExternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2020-06-01",
            "name": "[parameters('webAppPrivateEndpointName')]",
            "location": "[parameters('networkLocation')]",
            "properties": {
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworksName'), parameters('subnetInternalName'))]"
                },
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateLinkConnectionName')]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Web/sites', parameters('webAppInternalName'))]",
                            "groupIds": [
                                "sites"
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworksName'), parameters('subnetInternalName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('webAppInternalName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[variables('privateDnsZoneName')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[format('{0}/{1}', variables('privateDnsZoneName'), format('{0}-link', variables('privateDnsZoneName')))]",
            "location": "global",
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworksName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2020-03-01",
            "name": "[format('{0}/{1}', parameters('webAppPrivateEndpointName'), 'dnsgroupname')]",
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "config1",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', variables('privateDnsZoneName'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('webAppPrivateEndpointName'))]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "LinkedTemplate-NetworkLogAnalyticsandAutomationAccount",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/Azure/trusted-internet-connection/main/Architecture/Azure%20Firewall/Network%20with%20Log%20Analytics%20and%20Automation/azuredeploy.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "azureFirewallName": {
                        "value": "[parameters('azureFirewallName')]"
                    },
                    "azureFirewallResourceGroupName": {
                        "value": "[parameters('azureFirewallResourceGroupName')]"
                    },
                    "azureFirewallPoliciesName": {
                        "value": "[parameters('azureFirewallPoliciesName')]"
                    },
                    "publicIPAzureFirewallName": {
                        "value": "[parameters('publicIPAzureFirewallName')]"
                    },
                    "virtualNetworksName": {
                        "value": "[parameters('virtualNetworksName')]"
                    },
                    "networkLocation": {
                        "value": "[parameters('networkLocation')]"
                    },
                    "virtualNetworksIPRange": {
                        "value": "[parameters('virtualNetworksIPRange')]"
                    },
                    "subnetFirewallIPRange": {
                        "value": "[parameters('subnetFirewallIPRange')]"
                    },
                    "subnetFirewallName": {
                        "value": "[parameters('subnetFirewallName')]"
                    },
                    "logAnalyticsWorkspaceName": {
                        "value": "[parameters('logAnalyticsWorkspaceName')]"
                    },
                    "logAnalyticsWorkspaceLocation": {
                        "value": "[parameters('logAnalyticsWorkspaceLocation')]"
                    },
                    "logAnalyticsResourceGroupName": {
                        "value": "[parameters('logAnalyticsResourceGroupName')]"
                    },
                    "automationAccountName": {
                        "value": "[parameters('automationAccountName')]"
                    },
                    "automationAccountLocation": {
                        "value": "[parameters('automationAccountLocation')]"
                    },
                    "scheduleName": {
                        "value": "[parameters('scheduleName')]"
                    },
                    "baseTime": {
                        "value": "[parameters('baseTime')]"
                    },
                    "runbookName": {
                        "value": "[parameters('runbookName')]"
                    },
                    "runbookUri": {
                        "value": "[parameters('runbookUri')]"
                    },
                    "diagSettingsName": {
                        "value": "[parameters('diagSettingsName')]"
                    },
                    "actionGroupName": {
                        "value": "[parameters('actionGroupName')]"
                    },
                    "failedRunbookAlertEmail": {
                        "value": "[parameters('failedRunbookAlertEmail')]"
                    }
                }
            }
        }
    ]
}